public class IA{
	java.util.ArrayList<esame.ia.pileofballs.Lista> risultato;
	java.util.ArrayList<esame.ia.pileofballs.Lista> vuoto;
	int num;
	public IA(){}
	
	public java.util.ArrayList<esame.ia.pileofballs.Lista> scegliPosizione(java.util.ArrayList<esami.ia.pileofballs.Lista> occupati, java.util.ArrayList<esami.ia.pileofballs.Lista> tripla){
		this.risultato = new java.util.ArrayList<esame.ia.pileofballs.Lista>();
		this.vuoto = new java.util.ArrayList<esame.ia.pileofballs.Lista>();
		this.num = occupati.size()-1;
		
		<#
			IN=occupati::occ,tripla::el,num::num;
			OUT=risultato::scelta;
			pari(0).
			pari(2).
			pari(4).
			pari(6).
			pari(8).
			pari(10).
			dispari(1).
			dispari(3).
			dispari(5).
			dispari(7).
			dispari(9).
			dispari(11).
			col(3).
			scelta(ID,I,J,COL) v noscelta(ID,I,J,COL) :- occ(ID,I,J,COL).
			pos(I,J) :- pari(I), dispari(J).
			pos(I,J) :- dispari(I), pari(J).
			pos(I,J) :- pari(I), pari(J).
			pos(I,J) :- dispari(I), dispari(J).
			libere(I1,J1) :- pos(I1,J1), occ(_,I2,J2,_), I1<>I2, J1<>J2.
			coloritripla(COL) :- el(_,_,_,COL).
			:- not #count{ID:scelta(ID,_,_,_)} = 1.
			:- scelta(_,_,_,COL), not coloritripla(COL).
			vicini(ID,V,COL) :- scelta(ID,I1,J1,_), occ(V,I2,J2,COL), I1=I2, J2=J1+1, ID<>V.
			vicini(ID,V,COL) :- scelta(ID,I1,J1,_), occ(V,I2,J2,COL), I1=I2, J2=J1-1, ID<>V.
			vicini(ID,V,COL) :- scelta(ID,I1,J1,_), occ(V,I2,J2,COL), J1=J2, I2=I1-1, ID<>V.
			vicini(ID,V,COL) :- scelta(ID,I1,J1,_), occ(V,I2,J2,COL), J1=J2, I2=I1+1, ID<>V.
			vicini(ID,V,COL) :- scelta(ID,I1,J1,_), occ(V,I2,J2,COL), dispari(I1), I2=I1-1.
			vicini(ID,V,COL) :- scelta(ID,I1,J1,_), occ(V,I2,J2,COL), dispari(I1), I2=I1+1.
			vicini(ID,V,COL) :- scelta(ID,I1,J1,_), occ(V,I2,J2,COL), pari(I1), I2=I1+1, J2=J1+1.
			vicini(ID,V,COL) :- scelta(ID,I1,J1,_), occ(V,I2,J2,COL), pari(I1), I2=I1-1, J2=J1+1.
			vicinidiversi(ID,V) :- scelta(ID,_,_,COL1), vicini(ID,V,COL2), COL1<>COL2.
			:~ vicinidiversi(ID,V). [1:2]
			:~ vicini(ID,V,COL). [1:1]
		
		#>
		for_each_answerset{return risultato;}
		if(!risultato.isEmpty()){
				System.out.println("Trovato");
				return risultato;
		}	
		else 
			return  vuoto ;
	} 
}